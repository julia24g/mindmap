# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/graphql-server

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/graphql-server/package-lock.json
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/graphql-server
    needs: build

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker (install & start)
        id: setup-docker
        uses: docker/setup-docker-action@v4
        with:
          version: "type=archive,version=v27.4.0"
          tcp-port: 2375
          set-host: true
      - name: Export DOCKER_HOST from setup-docker outputs if present
        run: |
          if [ -n "${{ steps.setup-docker.outputs.tcp }}" ]; then
            echo "Using tcp output from setup-docker"
            echo "DOCKER_HOST=${{ steps.setup-docker.outputs.tcp }}" >> $GITHUB_ENV
          elif [ -n "${{ steps.setup-docker.outputs.sock }}" ]; then
            echo "Using sock output from setup-docker"
            SOCKVAL="${{ steps.setup-docker.outputs.sock }}"
            if [[ "$SOCKVAL" != unix://* ]]; then
              SOCKVAL="unix://$SOCKVAL"
            fi
            echo "DOCKER_HOST=$SOCKVAL" >> $GITHUB_ENV
          else
            echo "No tcp or sock output from setup-docker; leaving DOCKER_HOST untouched"
          fi
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: backend/graphql-server/package-lock.json
      - name: Wait for Docker to be ready
        run: |
          echo "Checking Docker availability via DOCKER_HOST=${DOCKER_HOST:-'(unset)'}"
          for i in {1..20}; do
            docker info && break || sleep 1
          done
      - name: Install dependencies
        run: npm ci
      - name: Run integration tests
        env:
          DEBUG: "testcontainers*"
          TESTCONTAINERS_RYUK_DISABLED: "true"
        run: npm run test:integration
